apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml -o .kubernetes
    kompose.service.type: LoadBalancer
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: raffleshopping-services-catalogs-api
  name: raffleshopping-services-catalogs-api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: raffleshopping-services-catalogs-api
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml -o .kubernetes
        kompose.service.type: LoadBalancer
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/raffleshopping-backend-raffle-network: "true"
        io.kompose.service: raffleshopping-services-catalogs-api
    spec:
      containers:
        - env:
            - name: COLLECTION_NAME
              valueFrom:
                secretKeyRef:
                  name: catalogs-secret
                  key: COLLECTION_NAME
            - name: CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: catalogs-secret
                  key: CONNECTION_STRING
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: catalogs-secret
                  key: DATABASE_NAME
            - name: SERVICE_BUS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: catalogs-secret
                  key: SERVICE_BUS_CONNECTION_STRING
            - name: SERVICE_BUS_QUEUE_NAME
              valueFrom:
                secretKeyRef:
                  name: catalogs-secret
                  key: SERVICE_BUS_QUEUE_NAME
          image: airell/raffle-shopping-catalog-service:latest
          name: raffleshopping-services-catalogs-api
          ports:
            - containerPort: 80
              hostPort: 50002
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
